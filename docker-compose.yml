version: '3.5'

networks: 
  network:
    name: ${APP_ALIAS}-network
    driver: bridge

services: 
  mysql:
    image: mysql:8.0.22
    env_file:
      - .env
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - 'db:/var/lib/mysql'
    ports:
      - '8070:3306'
    restart: always
    container_name: ${APP_ALIAS}-mysql
    restart: always
    networks:
      - network
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    env_file:
      - .env
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_HOST: mysql
    ports: 
      - '8080:80'
    depends_on: 
      - mysql
    container_name: ${APP_ALIAS}-phpmyadmin
    networks: 
      - network
  
  mongo:
    image: mongo
    container_name: ${APP_ALIAS}-mongo-db
    ports: 
      - '8071:27017'
    volumes: 
      - 'mongo-db:/data/db'
    networks:
      - network
  
  mongo-express:
    image: mongo-express
    container_name: ${APP_ALIAS}-mongo-express
    depends_on: 
      - mongo
    env_file: 
      - .env
    environment: 
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
    ports: 
      - '8081:8081'
    networks:
      - network

  app:
    build: 
      args: 
        user: ${SYSTEM_USER}
        uid: ${SYSTEM_USER_ID}
      context: .
      dockerfile: ./Dockerfile
    image: image
    ports: 
      - '8000:80'
    volumes:
      - '.:/var/www/html'
    container_name: ${APP_ALIAS}
    tty: true
    networks:
      - network

volumes:
  db:
  mongo-db:

